// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rgamma_c
Rcpp::NumericVector rgamma_c(unsigned n, double b, double a);
RcppExport SEXP _Rsubbotools_rgamma_c(SEXP nSEXP, SEXP bSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(rgamma_c(n, b, a));
    return rcpp_result_gen;
END_RCPP
}
// rlaplace
Rcpp::NumericVector rlaplace(unsigned n, const double m, const double a);
RcppExport SEXP _Rsubbotools_rlaplace(SEXP nSEXP, SEXP mSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< const double >::type m(mSEXP);
    Rcpp::traits::input_parameter< const double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(rlaplace(n, m, a));
    return rcpp_result_gen;
END_RCPP
}
// ralaplace
Rcpp::NumericVector ralaplace(unsigned n, double m, double al, double ar);
RcppExport SEXP _Rsubbotools_ralaplace(SEXP nSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    rcpp_result_gen = Rcpp::wrap(ralaplace(n, m, al, ar));
    return rcpp_result_gen;
END_RCPP
}
// rpower
Rcpp::NumericVector rpower(unsigned n, double m, double a, double b);
RcppExport SEXP _Rsubbotools_rpower(SEXP nSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(rpower(n, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// rsubbo
Rcpp::NumericVector rsubbo(unsigned n, double m, double a, double b);
RcppExport SEXP _Rsubbotools_rsubbo(SEXP nSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(rsubbo(n, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// rasubbo
Rcpp::NumericVector rasubbo(unsigned n, double m, double al, double ar, double bl, double br);
RcppExport SEXP _Rsubbotools_rasubbo(SEXP nSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP, SEXP blSEXP, SEXP brSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    rcpp_result_gen = Rcpp::wrap(rasubbo(n, m, al, ar, bl, br));
    return rcpp_result_gen;
END_RCPP
}
// rasubbo2
Rcpp::NumericVector rasubbo2(unsigned n, double m, double al, double ar, double bl, double br);
RcppExport SEXP _Rsubbotools_rasubbo2(SEXP nSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP, SEXP blSEXP, SEXP brSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    rcpp_result_gen = Rcpp::wrap(rasubbo2(n, m, al, ar, bl, br));
    return rcpp_result_gen;
END_RCPP
}
// alaplafit
Rcpp::List alaplafit(Rcpp::NumericVector data, int verb, unsigned interv_step, Rcpp::Nullable<Rcpp::NumericVector> provided_m_);
RcppExport SEXP _Rsubbotools_alaplafit(SEXP dataSEXP, SEXP verbSEXP, SEXP interv_stepSEXP, SEXP provided_m_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    Rcpp::traits::input_parameter< unsigned >::type interv_step(interv_stepSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type provided_m_(provided_m_SEXP);
    rcpp_result_gen = Rcpp::wrap(alaplafit(data, verb, interv_step, provided_m_));
    return rcpp_result_gen;
END_RCPP
}
// ppower
Rcpp::NumericVector ppower(Rcpp::NumericVector x, double m, double a, double b);
RcppExport SEXP _Rsubbotools_ppower(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(ppower(x, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// psep
Rcpp::NumericVector psep(Rcpp::NumericVector x, double m, double alpha, double sigma, double lambda);
RcppExport SEXP _Rsubbotools_psep(SEXP xSEXP, SEXP mSEXP, SEXP alphaSEXP, SEXP sigmaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(psep(x, m, alpha, sigma, lambda));
    return rcpp_result_gen;
END_RCPP
}
// plaplace
Rcpp::NumericVector plaplace(Rcpp::NumericVector x, double m, double a);
RcppExport SEXP _Rsubbotools_plaplace(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(plaplace(x, m, a));
    return rcpp_result_gen;
END_RCPP
}
// palaplace
Rcpp::NumericVector palaplace(Rcpp::NumericVector x, double m, double al, double ar);
RcppExport SEXP _Rsubbotools_palaplace(SEXP xSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    rcpp_result_gen = Rcpp::wrap(palaplace(x, m, al, ar));
    return rcpp_result_gen;
END_RCPP
}
// psubbo
Rcpp::NumericVector psubbo(Rcpp::NumericVector x, double m, double a, double b);
RcppExport SEXP _Rsubbotools_psubbo(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(psubbo(x, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// pasubbo
Rcpp::NumericVector pasubbo(Rcpp::NumericVector x, double m, double al, double ar, double bl, double br);
RcppExport SEXP _Rsubbotools_pasubbo(SEXP xSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP, SEXP blSEXP, SEXP brSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    rcpp_result_gen = Rcpp::wrap(pasubbo(x, m, al, ar, bl, br));
    return rcpp_result_gen;
END_RCPP
}
// sortRcpp
void sortRcpp(Rcpp::NumericVector x);
RcppExport SEXP _Rsubbotools_sortRcpp(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    sortRcpp(x);
    return R_NilValue;
END_RCPP
}
// dpower
Rcpp::NumericVector dpower(Rcpp::NumericVector x, double m, double a, double b);
RcppExport SEXP _Rsubbotools_dpower(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(dpower(x, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// dsep
Rcpp::NumericVector dsep(Rcpp::NumericVector x, double m, double a, double b, double lambda);
RcppExport SEXP _Rsubbotools_dsep(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dsep(x, m, a, b, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dsep_bottazzi
Rcpp::NumericVector dsep_bottazzi(Rcpp::NumericVector x, double m, double a, double b, double lambda);
RcppExport SEXP _Rsubbotools_dsep_bottazzi(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    rcpp_result_gen = Rcpp::wrap(dsep_bottazzi(x, m, a, b, lambda));
    return rcpp_result_gen;
END_RCPP
}
// dlaplace
Rcpp::NumericVector dlaplace(Rcpp::NumericVector x, double m, double a);
RcppExport SEXP _Rsubbotools_dlaplace(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(dlaplace(x, m, a));
    return rcpp_result_gen;
END_RCPP
}
// dalaplace
Rcpp::NumericVector dalaplace(Rcpp::NumericVector x, double m, double al, double ar);
RcppExport SEXP _Rsubbotools_dalaplace(SEXP xSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    rcpp_result_gen = Rcpp::wrap(dalaplace(x, m, al, ar));
    return rcpp_result_gen;
END_RCPP
}
// dsubbo
Rcpp::NumericVector dsubbo(Rcpp::NumericVector x, double m, double a, double b);
RcppExport SEXP _Rsubbotools_dsubbo(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(dsubbo(x, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// dasubbo
Rcpp::NumericVector dasubbo(Rcpp::NumericVector x, double m, double al, double ar, double bl, double br);
RcppExport SEXP _Rsubbotools_dasubbo(SEXP xSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP, SEXP blSEXP, SEXP brSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    rcpp_result_gen = Rcpp::wrap(dasubbo(x, m, al, ar, bl, br));
    return rcpp_result_gen;
END_RCPP
}
// laplafit
Rcpp::List laplafit(Rcpp::NumericVector data, int verb, unsigned interv_step, Rcpp::Nullable<Rcpp::NumericVector> provided_m_);
RcppExport SEXP _Rsubbotools_laplafit(SEXP dataSEXP, SEXP verbSEXP, SEXP interv_stepSEXP, SEXP provided_m_SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    Rcpp::traits::input_parameter< unsigned >::type interv_step(interv_stepSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type provided_m_(provided_m_SEXP);
    rcpp_result_gen = Rcpp::wrap(laplafit(data, verb, interv_step, provided_m_));
    return rcpp_result_gen;
END_RCPP
}
// qpower
Rcpp::NumericVector qpower(Rcpp::NumericVector x, double m, double a, double b);
RcppExport SEXP _Rsubbotools_qpower(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(qpower(x, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// qsep
Rcpp::NumericVector qsep(Rcpp::NumericVector x, double m, double a, double b, double lambda, int method, double step_size, double tol, int max_iter, int verb);
RcppExport SEXP _Rsubbotools_qsep(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP, SEXP lambdaSEXP, SEXP methodSEXP, SEXP step_sizeSEXP, SEXP tolSEXP, SEXP max_iterSEXP, SEXP verbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< double >::type step_size(step_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    rcpp_result_gen = Rcpp::wrap(qsep(x, m, a, b, lambda, method, step_size, tol, max_iter, verb));
    return rcpp_result_gen;
END_RCPP
}
// qlaplace
Rcpp::NumericVector qlaplace(Rcpp::NumericVector x, double m, double a);
RcppExport SEXP _Rsubbotools_qlaplace(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(qlaplace(x, m, a));
    return rcpp_result_gen;
END_RCPP
}
// qalaplace
Rcpp::NumericVector qalaplace(Rcpp::NumericVector x, double m, double al, double ar);
RcppExport SEXP _Rsubbotools_qalaplace(SEXP xSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    rcpp_result_gen = Rcpp::wrap(qalaplace(x, m, al, ar));
    return rcpp_result_gen;
END_RCPP
}
// qsubbo
Rcpp::NumericVector qsubbo(Rcpp::NumericVector x, double m, double a, double b);
RcppExport SEXP _Rsubbotools_qsubbo(SEXP xSEXP, SEXP mSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(qsubbo(x, m, a, b));
    return rcpp_result_gen;
END_RCPP
}
// qasubbo
Rcpp::NumericVector qasubbo(Rcpp::NumericVector x, double m, double al, double ar, double bl, double br);
RcppExport SEXP _Rsubbotools_qasubbo(SEXP xSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP, SEXP blSEXP, SEXP brSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    rcpp_result_gen = Rcpp::wrap(qasubbo(x, m, al, ar, bl, br));
    return rcpp_result_gen;
END_RCPP
}
// sepfit
Rcpp::List sepfit(Rcpp::NumericVector data, int verb, Rcpp::NumericVector par, Rcpp::NumericVector g_opt_par);
RcppExport SEXP _Rsubbotools_sepfit(SEXP dataSEXP, SEXP verbSEXP, SEXP parSEXP, SEXP g_opt_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type g_opt_par(g_opt_parSEXP);
    rcpp_result_gen = Rcpp::wrap(sepfit(data, verb, par, g_opt_par));
    return rcpp_result_gen;
END_RCPP
}
// subboafish
Rcpp::List subboafish(unsigned size, double bl, double br, double m, double al, double ar, unsigned O_munknown);
RcppExport SEXP _Rsubbotools_subboafish(SEXP sizeSEXP, SEXP blSEXP, SEXP brSEXP, SEXP mSEXP, SEXP alSEXP, SEXP arSEXP, SEXP O_munknownSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< double >::type bl(blSEXP);
    Rcpp::traits::input_parameter< double >::type br(brSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type al(alSEXP);
    Rcpp::traits::input_parameter< double >::type ar(arSEXP);
    Rcpp::traits::input_parameter< unsigned >::type O_munknown(O_munknownSEXP);
    rcpp_result_gen = Rcpp::wrap(subboafish(size, bl, br, m, al, ar, O_munknown));
    return rcpp_result_gen;
END_RCPP
}
// subboafit
Rcpp::List subboafit(Rcpp::NumericVector data, int verb, int method, int interv_step, Rcpp::Nullable<Rcpp::NumericVector> provided_m_, Rcpp::NumericVector par, Rcpp::NumericVector g_opt_par, Rcpp::NumericVector itv_opt_par);
RcppExport SEXP _Rsubbotools_subboafit(SEXP dataSEXP, SEXP verbSEXP, SEXP methodSEXP, SEXP interv_stepSEXP, SEXP provided_m_SEXP, SEXP parSEXP, SEXP g_opt_parSEXP, SEXP itv_opt_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type interv_step(interv_stepSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type provided_m_(provided_m_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type g_opt_par(g_opt_parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type itv_opt_par(itv_opt_parSEXP);
    rcpp_result_gen = Rcpp::wrap(subboafit(data, verb, method, interv_step, provided_m_, par, g_opt_par, itv_opt_par));
    return rcpp_result_gen;
END_RCPP
}
// subbofish
Rcpp::List subbofish(unsigned size, double b, double m, double a, unsigned O_munknown);
RcppExport SEXP _Rsubbotools_subbofish(SEXP sizeSEXP, SEXP bSEXP, SEXP mSEXP, SEXP aSEXP, SEXP O_munknownSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type size(sizeSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< unsigned >::type O_munknown(O_munknownSEXP);
    rcpp_result_gen = Rcpp::wrap(subbofish(size, b, m, a, O_munknown));
    return rcpp_result_gen;
END_RCPP
}
// mm_subbotin
double mm_subbotin(const double std_over_aad, int verb);
RcppExport SEXP _Rsubbotools_mm_subbotin(SEXP std_over_aadSEXP, SEXP verbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type std_over_aad(std_over_aadSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    rcpp_result_gen = Rcpp::wrap(mm_subbotin(std_over_aad, verb));
    return rcpp_result_gen;
END_RCPP
}
// optim_method_moments
Rcpp::List optim_method_moments(Rcpp::NumericVector data, double fmin, Rcpp::Nullable<Rcpp::NumericVector> provided_m_, int verb);
RcppExport SEXP _Rsubbotools_optim_method_moments(SEXP dataSEXP, SEXP fminSEXP, SEXP provided_m_SEXP, SEXP verbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< double >::type fmin(fminSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type provided_m_(provided_m_SEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    rcpp_result_gen = Rcpp::wrap(optim_method_moments(data, fmin, provided_m_, verb));
    return rcpp_result_gen;
END_RCPP
}
// subbofit
Rcpp::List subbofit(Rcpp::NumericVector data, int verb, int method, int interv_step, Rcpp::Nullable<Rcpp::NumericVector> provided_m_, Rcpp::NumericVector par, Rcpp::NumericVector g_opt_par, Rcpp::NumericVector itv_opt_par);
RcppExport SEXP _Rsubbotools_subbofit(SEXP dataSEXP, SEXP verbSEXP, SEXP methodSEXP, SEXP interv_stepSEXP, SEXP provided_m_SEXP, SEXP parSEXP, SEXP g_opt_parSEXP, SEXP itv_opt_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type interv_step(interv_stepSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type provided_m_(provided_m_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type g_opt_par(g_opt_parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type itv_opt_par(itv_opt_parSEXP);
    rcpp_result_gen = Rcpp::wrap(subbofit(data, verb, method, interv_step, provided_m_, par, g_opt_par, itv_opt_par));
    return rcpp_result_gen;
END_RCPP
}
// subbolafit
Rcpp::List subbolafit(Rcpp::NumericVector data, int verb, int method, int interv_step, Rcpp::Nullable<Rcpp::NumericVector> provided_m_, Rcpp::NumericVector par, Rcpp::NumericVector g_opt_par, Rcpp::NumericVector itv_opt_par);
RcppExport SEXP _Rsubbotools_subbolafit(SEXP dataSEXP, SEXP verbSEXP, SEXP methodSEXP, SEXP interv_stepSEXP, SEXP provided_m_SEXP, SEXP parSEXP, SEXP g_opt_parSEXP, SEXP itv_opt_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type verb(verbSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    Rcpp::traits::input_parameter< int >::type interv_step(interv_stepSEXP);
    Rcpp::traits::input_parameter< Rcpp::Nullable<Rcpp::NumericVector> >::type provided_m_(provided_m_SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type g_opt_par(g_opt_parSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type itv_opt_par(itv_opt_parSEXP);
    rcpp_result_gen = Rcpp::wrap(subbolafit(data, verb, method, interv_step, provided_m_, par, g_opt_par, itv_opt_par));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Rsubbotools_rgamma_c", (DL_FUNC) &_Rsubbotools_rgamma_c, 3},
    {"_Rsubbotools_rlaplace", (DL_FUNC) &_Rsubbotools_rlaplace, 3},
    {"_Rsubbotools_ralaplace", (DL_FUNC) &_Rsubbotools_ralaplace, 4},
    {"_Rsubbotools_rpower", (DL_FUNC) &_Rsubbotools_rpower, 4},
    {"_Rsubbotools_rsubbo", (DL_FUNC) &_Rsubbotools_rsubbo, 4},
    {"_Rsubbotools_rasubbo", (DL_FUNC) &_Rsubbotools_rasubbo, 6},
    {"_Rsubbotools_rasubbo2", (DL_FUNC) &_Rsubbotools_rasubbo2, 6},
    {"_Rsubbotools_alaplafit", (DL_FUNC) &_Rsubbotools_alaplafit, 4},
    {"_Rsubbotools_ppower", (DL_FUNC) &_Rsubbotools_ppower, 4},
    {"_Rsubbotools_psep", (DL_FUNC) &_Rsubbotools_psep, 5},
    {"_Rsubbotools_plaplace", (DL_FUNC) &_Rsubbotools_plaplace, 3},
    {"_Rsubbotools_palaplace", (DL_FUNC) &_Rsubbotools_palaplace, 4},
    {"_Rsubbotools_psubbo", (DL_FUNC) &_Rsubbotools_psubbo, 4},
    {"_Rsubbotools_pasubbo", (DL_FUNC) &_Rsubbotools_pasubbo, 6},
    {"_Rsubbotools_sortRcpp", (DL_FUNC) &_Rsubbotools_sortRcpp, 1},
    {"_Rsubbotools_dpower", (DL_FUNC) &_Rsubbotools_dpower, 4},
    {"_Rsubbotools_dsep", (DL_FUNC) &_Rsubbotools_dsep, 5},
    {"_Rsubbotools_dsep_bottazzi", (DL_FUNC) &_Rsubbotools_dsep_bottazzi, 5},
    {"_Rsubbotools_dlaplace", (DL_FUNC) &_Rsubbotools_dlaplace, 3},
    {"_Rsubbotools_dalaplace", (DL_FUNC) &_Rsubbotools_dalaplace, 4},
    {"_Rsubbotools_dsubbo", (DL_FUNC) &_Rsubbotools_dsubbo, 4},
    {"_Rsubbotools_dasubbo", (DL_FUNC) &_Rsubbotools_dasubbo, 6},
    {"_Rsubbotools_laplafit", (DL_FUNC) &_Rsubbotools_laplafit, 4},
    {"_Rsubbotools_qpower", (DL_FUNC) &_Rsubbotools_qpower, 4},
    {"_Rsubbotools_qsep", (DL_FUNC) &_Rsubbotools_qsep, 10},
    {"_Rsubbotools_qlaplace", (DL_FUNC) &_Rsubbotools_qlaplace, 3},
    {"_Rsubbotools_qalaplace", (DL_FUNC) &_Rsubbotools_qalaplace, 4},
    {"_Rsubbotools_qsubbo", (DL_FUNC) &_Rsubbotools_qsubbo, 4},
    {"_Rsubbotools_qasubbo", (DL_FUNC) &_Rsubbotools_qasubbo, 6},
    {"_Rsubbotools_sepfit", (DL_FUNC) &_Rsubbotools_sepfit, 4},
    {"_Rsubbotools_subboafish", (DL_FUNC) &_Rsubbotools_subboafish, 7},
    {"_Rsubbotools_subboafit", (DL_FUNC) &_Rsubbotools_subboafit, 8},
    {"_Rsubbotools_subbofish", (DL_FUNC) &_Rsubbotools_subbofish, 5},
    {"_Rsubbotools_mm_subbotin", (DL_FUNC) &_Rsubbotools_mm_subbotin, 2},
    {"_Rsubbotools_optim_method_moments", (DL_FUNC) &_Rsubbotools_optim_method_moments, 4},
    {"_Rsubbotools_subbofit", (DL_FUNC) &_Rsubbotools_subbofit, 8},
    {"_Rsubbotools_subbolafit", (DL_FUNC) &_Rsubbotools_subbolafit, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_Rsubbotools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
